XPLINTER VERSION 0.1.0

LOAD PYTHON helper_module

ENUM edtype   { SCI, SSCI, AHCI, ISTP, ISSHP, IC, CCR, BSCI, BHCI, ESCI }
ENUM pubtype  { journal, book, book in series }
ENUM idtype   { accession_no, art_no, doi, eisbn, eissn, isbn, issn, meeting_abs, parent_book_doi, pmid, xref_doi }
ENUM oastype  { gold, hybrid, gold_doaj, gold_other, bronze, green_published, green_accepted, green_submitted }
ENUM functype { background, basis, support, differ, discuss }

ROOT ENTITY *root (ONE)
{
    id                CHAR(15)       XPATH(UID) @ TOTEXT() @ PYTHON(lambda text: text[4:]),
    edition           ENUM(edtype)   XPATH(static_data/summary/EWUID/edition[1]/@value) @ TOTEXT() @ PYTHON(lambda text: text[4:]),
    type              ENUM(pubtype)  XPATH(static_data/summary/pub_info/@pubtype) @ TOTEXT() @ PYTHON(lambda text: text.lower()),
    year          OPT SMALLINT       XPATH(static_data/summary/pub_info/@pubyear),
    sortdate      OPT DATE           XPATH(static_data/summary/pub_info/@sortdate),
    vol           OPT TEXT           XPATH(static_data/summary/pub_info/@vol),
    issue         OPT TEXT           XPATH(static_data/summary/pub_info/@issue),
    page_begin    OPT CHAR(10)       XPATH(static_data/summary/pub_info/page/@begin),
    page_end      OPT CHAR(10)       XPATH(static_data/summary/pub_info/page/@end),
    page_count    OPT SMALLINT       XPATH(static_data/summary/pub_info/page/@page_count),
    title         OPT TEXT           XPATH(static_data/summary/titles/title[@type="item"]),
    ref_count         SMALLINT       XPATH(static_data/fullrecord_metadata/references/@count),

    source_id         BIGINT         HASH(source_name, publisher_id),
    source_name       TEXT           XPATH(static_data/summary/titles/title[@type="source"]),
    abbrev        OPT TEXT           XPATH(static_data/summary/titles/title[@type="source_abbrev"]),
    series        OPT TEXT           XPATH(static_data/summary/titles/title[@type="series"]),

    publisher_id      BIGINT         HASH(full_name, address),
    full_name     OPT TEXT           XPATH(static_data/summary/publishers/publisher/names/name/full_name),
    unified_name  OPT TEXT           XPATH(static_data/summary/publishers/publisher/names/name/unified_name),
    address       OPT TEXT           XPATH(static_data/summary/publishers/publisher/address_spec/full_address),
    city          OPT TEXT           XPATH(static_data/summary/publishers/publisher/address_spec/city)
}

VIEW publication OF *root {
    id, edition, source_id, type, year, sortdate, vol, issue, page_begin, page_end, page_count, title, ref_count
}

VIEW source OF *root {
    source_id AS id, source_name AS name, publisher_id, abbrev, series
}

VIEW publisher OF *root {
    publisher_id AS id, full_name, unified_name, address, city
}

ENTITY author (ONE OR MORE, *root, XPATH(static_data/summary/names/name)) {
    id             BIGINT    HASH(wos_id, full_name, seq_no),
    wos_id         CHAR(15)  PARENTFIELD(0),
    full_name      TEXT      XPATH(full_name),
    seq_no         SMALLINT  XPATH(@seq_no),
    reprint    OPT BOOLEAN   XPATH(@reprint) @ TOTEXT() @ PYTHON(lambda reprint: reprint=='Y'),
    email      OPT TEXT      XPATH(email_addr),
    orcid      OPT TEXT      XPATH(orcid_id_tr),
    *addr_no   OPT TEXT      XPATH(@addr_no)
}

ENTITY contributor (ZERO OR MORE, *root, XPATH(static_data/contributors/contributor/name)) {
    id             BIGINT    HASH(wos_id, full_name, rid, orcid),
    wos_id         CHAR(15)  PARENTFIELD(0), 
    full_name  OPT TEXT      XPATH(full_name),
    rid        OPT TEXT      XPATH(@r_id),
    orcid      OPT TEXT      XPATH(@orcid_id)
}

ENTITY address (ONE OR MORE, *root, XPATH(static_data/fullrecord_metadata/addresses/address_name/address_spec)) {
    id               BIGINT  HASH(address),
    address          TEXT    XPATH(full_address),
    street       OPT TEXT    XPATH(street),
    city         OPT TEXT    XPATH(city),
    admin_div    OPT TEXT    XPATH(state),
    country      OPT TEXT    XPATH(country),
    postal_code  OPT TEXT    XPATH(zip[1]),
    *addr_no     OPT TEXT    XPATH(@addr_no)
}

# The values are filled in postprocessing.
ENTITY author_address (ONE OR MORE) {
    author_id   BIGINT  NULL(),
    address_id  BIGINT  NULL()
}

ENTITY abstract (ZERO OR ONE, *root, XPATH(static_data/fullrecord_metadata/abstracts/abstract/abstract_text)) {
    wos_id      CHAR(15)  PARENTFIELD(0),
    text    OPT TEXT      PYTHON(paragraph_formatter)
}

ENTITY reference (ZERO OR MORE, *root, XPATH(static_data/fullrecord_metadata/references/reference)) {
    citing_id             CHAR(15)  PARENTFIELD(0),
    cited_id          OPT TEXT      XPATH(uid),
    occurrence_order      SMALLINT  XPATH(@occurenceOrder),
    author            OPT TEXT      XPATH(citedAuthor),
    year              OPT SMALLINT  XPATH(year) @ TOTEXT() @ PYTHON(parse_ref_year),
    source            OPT TEXT      XPATH(citedWork),
    volume            OPT TEXT      XPATH(volume),
    page              OPT TEXT      XPATH(page),
    title             OPT TEXT      XPATH(citedTitle),
    doi               OPT TEXT      XPATH(doi),
    patent_no         OPT TEXT      XPATH(patent_no),
    assignee          OPT TEXT      XPATH(assignee)
}

ENTITY reference_context (ZERO OR MORE, reference, XPATH(physicalSection)) {
    citing_id      CHAR(15)        PARENTFIELD(0),
    cited_id       TEXT            PARENTFIELD(1),
    location       DOUBLE          XPATH(@physicalLocation),
    function       ENUM(functype)  XPATH(@function),
    section        TEXT            XPATH(@section),
    section_title  TEXT            XPATH(.)
}

ENTITY identifier (ZERO OR MORE, *root, XPATH(dynamic_data/cluster_related/identifiers/identifier)) {
    wos_id  CHAR(15)      PARENTFIELD(0),
    type    ENUM(idtype)  XPATH(@type),
    value   TEXT          XPATH(@value)
}

ENTITY openaccess (ZERO OR MORE, *root, XPATH(dynamic_data/ic_related/oases/oas)) {
    wos_id  CHAR(15)       PARENTFIELD(0),
    status  ENUM(oastype)  XPATH(@type)
}

ENTITY funding (ZERO OR ONE, *root, XPATH(static_data/fullrecord_metadata/fund_ack/fund_text)) {
    wos_id      CHAR(15)  PARENTFIELD(0),
    text    OPT TEXT      PYTHON(paragraph_formatter)
}

ENTITY grant_data (ZERO OR MORE, *root, XPATH(static_data/fullrecord_metadata/fund_ack/grants/grant/grant_data/grantDataItem)) {
    *wos_id             CHAR(15)  PARENTFIELD(0),
    id                  TEXT     XPATH(grantid),
    project_title       TEXT     XPATH(grantProjectTitle),
    amount              INTEGER  XPATH(totalAwardAmount),
    currency            CHAR(3)  XPATH(currency),
    date_start          DATE     XPATH(startDate),
    date_end            DATE     XPATH(endDate),
    pi_name             TEXT     XPATH(principalInvestigators/principalInvestigator[1]),
    pi_institution      TEXT     XPATH(principalInvestigators/principalInvestigatorInstitutions/principalInvestigatorInstitution)
}

VIEW publication_grant OF grant_data {
    *wos_id AS wos_id,
    id AS grant_id
}

ENTITY conference (ZERO OR MORE, *root, XPATH(static_data/summary/conferences/conference)) {
    *wos_id          CHAR(15)  PARENTFIELD(0),
    id          OPT  INTEGER   XPATH(@conf_id),
    title       OPT  TEXT      XPATH(conf_titles/conf_title),
    date_start  OPT  DATE      XPATH(conf_dates/conf_date/@conf_start) @ TOTEXT() @ PYTHON(parse_conf_date),
    date_end    OPT  DATE      XPATH(conf_dates/conf_date/@conf_end) @ TOTEXT() @ PYTHON(parse_conf_date),
    host        OPT  TEXT      XPATH(conf_locations/conf_location/conf_host),
    city        OPT  TEXT      XPATH(conf_locations/conf_location/conf_city),
    admin_div   OPT  TEXT      XPATH(conf_locations/conf_location/conf_state) @ TOTEXT() @ PYTHON(parse_conf_admin_div),
    country     OPT  TEXT      XPATH(conf_locations/conf_location/conf_state) @ TOTEXT() @ PYTHON(parse_conf_country),
    online      OPT  BOOLEAN   XPATH(conf_locations/conf_location/conf_state) @ TOTEXT() @ PYTHON(parse_conf_online)
}

VIEW publication_conference OF conference {
    *wos_id AS wos_id,
    id AS conf_id
}

ENTITY conference_sponsor (ZERO OR MORE, conference, XPATH(sponsors/sponsor)) {
    id       BIGINT   HASH(conf_id, name),
    conf_id  INTEGER  PARENTFIELD(1),
    name     TEXT     XPATH(.)
}

KVENTITY descriptor (*root) {
    KV{
        doctype      XPATH(static_data/summary/doctypes/doctype),
        language     XPATH(static_data/fullrecord_metadata/languages/language),
        heading      XPATH(static_data/fullrecord_metadata/category_info/headings/heading),
        subheading   XPATH(static_data/fullrecord_metadata/category_info/subheadings/subheading),
        subject      XPATH(static_data/fullrecord_metadata/category_info/subjects/subject[@ascatype="traditional"]),
        subject_ext  XPATH(static_data/fullrecord_metadata/category_info/subjects/subject[@ascatype="extended"]),
        keyword      XPATH(static_data/fullrecord_metadata/keywords/keyword),
        kw_plus      XPATH(static_data/item/keywords_plus/keyword)
    },
    HASH           AS id,
    PARENTFIELD(0) AS *wos_id,
    VALUE          AS text,
    KEY            AS type
}

VIEW publication_descriptor OF descriptor {
    *wos_id AS wos_id, id AS desc_id
}